var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'WORKS', 'text': '', 'tags': '', 'url': 'WORKS.html'}, {'title': 'stage 1', 'text': '', 'tags': '', 'url': 'stage 1.html'}, {'title': 'W1', 'text': '打開GITHUB \n 進入reposipories \n 開新專案 \n \n 輸入自己的組別 \n \n \n \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2~W3', 'text': 'W2主題擺鐘棘輪 \n \n 動機:看到時鐘就想到光陰的流逝，藉由研究單擺鐘的運動原理來提醒我們珍惜時間的重要性。 \n 組長:40723141 楊先豪 \n 組員:40723233 陳謙諭 \n 一開始打算著手研究單擺鐘內部構造的時候我們以為構造會非常複雜。 \n \n 後來上網查詢了很多資料才發現，單擺鐘最重要的是諸多齒輪當中一個叫擒縱機構的部分。 \n \n 它的運作原理是靠著鐘擺底下掛的重物來回擺盪，帶動擒爪左右轉動，當轉動到底時，擒爪會卡入擒輪的齒縫使其停滯，來達到秒針運作的效果。 \n \n 擒縱器因為不同的設計者有多種類型，每一款單擺鐘的擒縱器形式都不一定相同。 \n \n 上網查找之後我們找到的資料幾乎都是運作方式的講解圖，花了許多時間才找到有標示尺寸的零件圖，之後我們就開始進行繪製。 \n \n 零件一 \n \n 零件二 \n \n 零件三 \n \n 組合圖 \n \n', 'tags': '', 'url': 'W2~W3.html'}, {'title': 'W4', 'text': '零件組合 \n 組合圖 \n \n \n', 'tags': '', 'url': 'W4.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};