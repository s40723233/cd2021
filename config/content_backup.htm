<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>WORKS</h1>
<h2>stage 1</h2>
<h3>W1</h3>
<p>打開GITHUB</p>
<p>進入reposipories</p>
<p>開新專案</p>
<p><img alt="" height="75" src="/images/螢幕擷取畫面 2021-03-18 191108.png" width="495"/></p>
<p>輸入自己的組別</p>
<p><img alt="" height="423" src="/images/螢幕擷取畫面 2021-03-18 191137.png" width="502"/></p>
<p></p>
<p></p>
<h3>W2~W3</h3>
<p>W2主題擺鐘棘輪</p>
<p><img alt="" height="296" src="/images/1.jpg" width="170"/></p>
<h6>動機:看到時鐘就想到光陰的流逝，藉由研究單擺鐘的運動原理來提醒我們珍惜時間的重要性。</h6>
<h6>組長:40723141 楊先豪</h6>
<h6>組員:40723233 陳謙諭</h6>
<h6>一開始打算著手研究單擺鐘內部構造的時候我們以為構造會非常複雜。</h6>
<p><img alt="" height="595" src="/images/3.jpg" width="595"/></p>
<h6>後來上網查詢了很多資料才發現，單擺鐘最重要的是諸多齒輪當中一個叫擒縱機構的部分。</h6>
<p><img alt="" height="360" src="/images/2.jpg" width="480"/></p>
<h6>它的運作原理是靠著鐘擺底下掛的重物來回擺盪，帶動擒爪左右轉動，當轉動到底時，擒爪會卡入擒輪的齒縫使其停滯，來達到秒針運作的效果。</h6>
<p><img alt="" height="349" src="/images/2.gif" width="231"/><img alt="" height="307" src="/images/1.gif" width="283"/></p>
<h6>擒縱器因為不同的設計者有多種類型，每一款單擺鐘的擒縱器形式都不一定相同</h6>
<p><img alt="" height="443" src="/images/4.jpg" width="476"/></p>
<h6>上網查找之後我們找到的資料幾乎都是運作方式的講解圖，我們嘗試用很多關鍵字搜尋過，像是「擒縱機構」加上「零件圖」、「工程圖」、「規格」等字眼，直到最後用擒縱機構的英文「escapement」加上「cad」才找到有標示尺寸的零件圖，之後我們就開始進行繪製。</h6>
<p><img alt="" height="433" src="/images/螢幕擷取畫面 2021-03-19 141047.png" width="503"/></p>
<p>零件一</p>
<p><img alt="" height="528" src="/images/螢幕擷取畫面 2021-03-19 154622.png" width="352"/></p>
<p><span>零件二</span></p>
<p><span><img alt="" height="259" src="/images/螢幕擷取畫面 2021-03-18 194855.png" width="339"/></span></p>
<p><span>零件三</span></p>
<p><span><img alt="" height="359" src="/images/螢幕擷取畫面 2021-03-18 194918.png" width="362"/></span></p>
<p><span>組合圖</span></p>
<p></p>
<h3>W4</h3>
<p>零件組合</p>
<p>組合圖</p>
<p><img alt="" height="647" src="/images/螢幕擷取畫面 2021-03-19 140937.png" width="458"/></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/YyDckWiGCNo" width="560"></iframe></p>
<h3>W5</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/YyDckWiGCNo" width="560"></iframe></p>
<h2>stage 2</h2>
<h3>W6</h3>
<h4>題目介紹</h4>
<p>擬定題目:窗簾機構</p>
<p><span>想讓窗簾能夠像人的瞳孔自動調整進光量,所以藉由下圖伸縮機構及參考網站,讓窗簾智慧化</span></p>
<p><span><img caption="false" height="259" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-16%20140205.png" width="450"/></span></p>
<h4>工作分配</h4>
<p>40823227:<span>編輯小組倉儲、網站、模擬機構</span></p>
<p><span>40823241:繪圖、製作簡報、影片</span></p>
<p><span>40723233:參與討論</span></p>
<p><span>40723141:提供題材</span></p>
<h3>W7</h3>
<h4>機構設計</h4>
<p><span>從簡圖開始到網路上查詢</span></p>
<p>最後找到模擬作動的gif檔</p>
<p>所以我們決定按照類似的機構製作<span>窗簾伸縮機構</span></p>
<p>已先繪製完主體為優先</p>
<p><span>這是我們設計的零組件:</span></p>
<p><span>滑軌</span></p>
<p><img caption="false" height="187" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20121918.jpg" width="400"/></p>
<p>連桿</p>
<p><img caption="false" height="188" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20124219.jpg" width="400"/></p>
<p>輪子</p>
<p><img alt="" height="188" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20124540.jpg" width="400"/></p>
<p>感光裝置</p>
<p><img alt="" height="188" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20124837.jpg" width="400"/></p>
<p>布幕</p>
<p><img alt="" height="188" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20125054.jpg" width="400"/></p>
<h3>W8</h3>
<h4>機構組裝</h4>
<p><span>將上禮拜的零組件組合起來</span></p>
<p>滑軌</p>
<p><img caption="false" height="187" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20121918.jpg" width="400"/></p>
<p>連桿</p>
<p><img caption="false" height="188" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20124219.jpg" width="400"/></p>
<p>輪子</p>
<p><img alt="" height="188" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20124540.jpg" width="400"/></p>
<p>感光裝置</p>
<p><img alt="" height="188" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20124837.jpg" width="400"/></p>
<p>布幕</p>
<p><img alt="" height="188" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20125054.jpg" width="400"/></p>
<p>組合完成機構</p>
<p><img alt="" height="188" src="https://40823241.github.io/stage2-bg5/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-23%20130528.jpg" width="400"/></p>
<h3>W9</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Bi5UnJ_eW54" width="560"></iframe></p>
<h2>stage 3</h2>
<h3>W10 小組task</h3>
<h5>task 1</h5>
<p>讀取 stage3_2a.txt, 建立 Stage3 的分組倉儲, 分組網頁, 以及各組員倉儲及網頁連結.</p>
<p>已知<span> </span><a href="http://mde.tw/cd2021/downloads/stage3/stage3_2a.txt">stage3_2a.txt</a><span> </span>與<span> </span><a href="http://mde.tw/cd2021/downloads/stage3/stage3_2b.txt">stage3_2b.txt</a><span> </span>內容, 以及初步資料讀取程式:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_375707">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># open file, default is read mode, since txt content no chinese char</code></div>
<div class="line number2 index1 alt1"><code class="py comments"># no encoding = "UTF-8" is needed</code></div>
<div class="line number3 index2 alt2"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"stage3_2a.txt"</code><code class="py plain">) as fh:</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py comments"># readlines will read into the whole line and put into list format</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py comments"># has \n at the end of each line</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">    </code><code class="py plain">data </code><code class="py keyword">=</code> <code class="py plain">fh.readlines()</code></div>
<div class="line number7 index6 alt2"><code class="py comments">#print(len(data))</code></div>
<div class="line number8 index7 alt1"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py functions">len</code><code class="py plain">(data)):</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">    </code><code class="py plain">group </code><code class="py keyword">=</code> <code class="py plain">data[i].rstrip(</code><code class="py string">"\n"</code><code class="py plain">).split(</code><code class="py string">"\t"</code><code class="py plain">)</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(group)</code></div>
<div class="line number11 index10 alt2"><code class="py comments"># the following will use group data to generate needed html</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>以下為每組亂數抽選 2 名組員的程式碼:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_893327">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># open file, default is read mode, since txt content no chinese char</code></div>
<div class="line number2 index1 alt1"><code class="py comments"># no encoding = "UTF-8" is needed</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">import</code> <code class="py plain">random</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="py comments"># number of group menber to draw</code></div>
<div class="line number6 index5 alt1"><code class="py plain">num </code><code class="py keyword">=</code> <code class="py value">2</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="py comments"># check if data is "" or not</code></div>
<div class="line number9 index8 alt2"><code class="py keyword">def</code> <code class="py plain">notVacant(data):</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">data </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py plain">"":</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">        </code><code class="py keyword">return</code> <code class="py color1">False</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">    </code><code class="py keyword">else</code><code class="py plain">:</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">        </code><code class="py keyword">return</code> <code class="py color1">True</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">        </code> </div>
<div class="line number15 index14 alt2"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"stage3_2b.txt"</code><code class="py plain">) as fh:</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py comments"># readlines will read into the whole line and put into list format</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py comments"># has \n at the end of each line</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py plain">data </code><code class="py keyword">=</code> <code class="py plain">fh.readlines()</code></div>
<div class="line number19 index18 alt2"><code class="py comments">#print(len(data))</code></div>
<div class="line number20 index19 alt1"><code class="py comments"># big group list</code></div>
<div class="line number21 index20 alt2"><code class="py plain">bgroup </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number22 index21 alt1"><code class="py comments"># count from the second group member</code></div>
<div class="line number23 index22 alt2"><code class="py plain">sgroup </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number24 index23 alt1"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py functions">len</code><code class="py plain">(data)):</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">    </code><code class="py plain">group </code><code class="py keyword">=</code> <code class="py plain">data[i].rstrip(</code><code class="py string">"\n"</code><code class="py plain">).split(</code><code class="py string">"\t"</code><code class="py plain">)</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">    </code><code class="py comments">#print(group)</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">    </code><code class="py comments"># use mem to count the total number of each group</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py plain">mem </code><code class="py keyword">=</code> <code class="py value">0</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">    </code><code class="py comments"># final group data</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py plain">fgroup </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">    </code><code class="py comments"># count from the second group member, eliminate the first element</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py plain">sgroup </code><code class="py keyword">=</code> <code class="py plain">group[</code><code class="py value">1</code><code class="py plain">:]</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">    </code><code class="py comments"># get only the odd index number</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">    </code><code class="py plain">igroup </code><code class="py keyword">=</code> <code class="py plain">[i </code><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py functions">len</code><code class="py plain">(sgroup)) </code><code class="py keyword">if</code> <code class="py plain">i </code><code class="py keyword">%</code> <code class="py value">2</code> <code class="py keyword">=</code><code class="py keyword">=</code> <code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">j </code><code class="py keyword">in</code> <code class="py plain">igroup:</code></div>
<div class="line number36 index35 alt1"><code class="py spaces">        </code><code class="py comments"># index starts from 0 which is j-1 when j=1</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py plain">notVacant(sgroup[j</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">]) </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py color1">True</code><code class="py plain">:</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">            </code><code class="py plain">mem </code><code class="py keyword">+</code><code class="py keyword">=</code> <code class="py value">1</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">            </code><code class="py plain">fgroup.append(sgroup[j</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">])</code></div>
<div class="line number40 index39 alt1"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"group "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(i</code><code class="py keyword">+</code><code class="py value">1</code><code class="py plain">) </code><code class="py keyword">+</code> <code class="py string">":"</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(mem))</code></div>
<div class="line number41 index40 alt2"><code class="py spaces">    </code><code class="py comments"># shuffle the fgroup list</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">    </code><code class="py plain">random.shuffle(fgroup)</code></div>
<div class="line number43 index42 alt2"><code class="py spaces">    </code><code class="py comments"># draw num of member from final group list: fgroup</code></div>
<div class="line number44 index43 alt1"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">k </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(num):</code></div>
<div class="line number45 index44 alt2"><code class="py spaces">        </code><code class="py keyword">try</code><code class="py plain">:</code></div>
<div class="line number46 index45 alt1"><code class="py spaces">            </code><code class="py functions">print</code><code class="py plain">(fgroup[k])</code></div>
<div class="line number47 index46 alt2"><code class="py spaces">        </code><code class="py keyword">except</code><code class="py plain">:</code></div>
<div class="line number48 index47 alt1"><code class="py spaces">            </code><code class="py comments"># num is greater than total number of this group</code></div>
<div class="line number49 index48 alt2"><code class="py spaces">            </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"no such member"</code><code class="py plain">)</code></div>
<div class="line number50 index49 alt1"><code class="py spaces">    </code><code class="py comments"># seperator</code></div>
<div class="line number51 index50 alt2"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"-"</code><code class="py keyword">*</code><code class="py value">20</code><code class="py plain">)</code></div>
<div class="line number52 index51 alt1"><code class="py comments"># the following will use group data to generate needed html</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h4>以下為各分組倉儲, 分組網站與學員倉儲及學員網站連結:</h4>
<p><strong>成果:</strong></p>
<p><a href="http://github.com/40823245/stage3-bg1">stage3-bg1 repo</a><span><span> </span>|<span> </span></span><a href="http://40823251.github.io/stage3-bg1">stage3-bg1 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823245/cd2021">40823245 repo</a><span><span> </span>|<span> </span></span><a href="http://40823245.github.io/cd2021">40823245 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823251/cd2021">40823251 repo</a><span><span> </span>|<span> </span></span><a href="http://40823251.github.io/cd2021">40823251 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823208/cd2021">40823208 repo</a><span><span> </span>|<span> </span></span><a href="http://40823208.github.io/cd2021">40823208 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823213/cd2021">40823213 repo</a><span><span> </span>|<span> </span></span><a href="http://40823213.github.io/cd2021">40823213 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823232/cd2021">40823232 repo</a><span><span> </span>|<span> </span></span><a href="http://40823232.github.io/cd2021">40823232 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823234/cd2021">40823234 repo</a><span><span> </span>|<span> </span></span><a href="http://40823234.github.io/cd2021">40823234 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823235/cd2021">40823235 repo</a><span><span> </span>|<span> </span></span><a href="http://40823235.github.io/cd2021">40823235 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823246/cd2021">40823246 repo</a><span>|<span> </span></span><a href="http://40823246.github.io/cd2021">40823246 site</a><br/><span>----------</span><br/><a href="http://github.com/40823217/stage3-bg2">stage3-bg2 repo</a><span><span> </span>|<span> </span></span><a href="http://40823201.github.io/stage3-bg2">stage3-bg2 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823217/cd2021">40823217 repo</a><span><span> </span>|<span> </span></span><a href="http://40823217.github.io/cd2021">40823217 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823201/cd2021">40823201 repo</a><span><span> </span>|<span> </span></span><a href="http://40823201.github.io/cd2021">40823201 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823209/cd2021">40823209 repo</a><span><span> </span>|<span> </span></span><a href="http://40823209.github.io/cd2021">40823209 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823210/cd2021">40823210 repo</a><span><span> </span>|<span> </span></span><a href="http://40823210.github.io/cd2021">40823210 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823206/cd2021">40823206 repo</a><span><span> </span>|<span> </span></span><a href="http://40823206.github.io/cd2021">40823206 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823207/cd2021">40823207 repo</a><span><span> </span>|<span> </span></span><a href="http://40823207.github.io/cd2021">40823207 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823223/cd2021">40823223 repo</a><span><span> </span>|<span> </span></span><a href="http://40823223.github.io/cd2021">40823223 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823224/cd2021">40823224 repo</a><span>|<span> </span></span><a href="http://40823224.github.io/cd2021">40823224 site</a><br/><span>----------</span><br/><a href="http://github.com/40823236/stage3-bg3">stage3-bg3 repo</a><span><span> </span>|<span> </span></span><a href="http://40823202.github.io/stage3-bg3">stage3-bg3 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823236/cd2021">40823236 repo</a><span><span> </span>|<span> </span></span><a href="http://40823236.github.io/cd2021">40823236 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823202/cd2021">40823202 repo</a><span><span> </span>|<span> </span></span><a href="http://40823202.github.io/cd2021">40823202 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823203/cd2021">40823203 repo</a><span><span> </span>|<span> </span></span><a href="http://40823203.github.io/cd2021">40823203 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823212/cd2021">40823212 repo</a><span><span> </span>|<span> </span></span><a href="http://40823212.github.io/cd2021">40823212 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823219/cd2021">40823219 repo</a><span><span> </span>|<span> </span></span><a href="http://40823219.github.io/cd2021">40823219 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823222/cd2021">40823222 repo</a><span><span> </span>|<span> </span></span><a href="http://40823222.github.io/cd2021">40823222 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823231-2/cd2021">40823231-2 repo</a><span><span> </span>|<span> </span></span><a href="http://40823231-2.github.io/cd2021">40823231-2 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823244/cd2021">40823244 repo</a><span>|<span> </span></span><a href="http://40823244.github.io/cd2021">40823244 site</a><br/><span>----------</span><br/><a href="http://github.com/40823239/stage3-bg4">stage3-bg4 repo</a><span><span> </span>|<span> </span></span><a href="http://s40723140.github.io/stage3-bg4">stage3-bg4 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823239/cd2021">40823239 repo</a><span><span> </span>|<span> </span></span><a href="http://40823239.github.io/cd2021">40823239 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/s40723140/cd2021">s40723140 repo</a><span><span> </span>|<span> </span></span><a href="http://s40723140.github.io/cd2021">s40723140 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/s40723128/cd2021">s40723128 repo</a><span><span> </span>|<span> </span></span><a href="http://s40723128.github.io/cd2021">s40723128 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/s40723139/cd2021">s40723139 repo</a><span><span> </span>|<span> </span></span><a href="http://s40723139.github.io/cd2021">s40723139 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/s40723106/cd2021">s40723106 repo</a><span><span> </span>|<span> </span></span><a href="http://s40723106.github.io/cd2021">s40723106 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/s40723135/cd2021">s40723135 repo</a><span><span> </span>|<span> </span></span><a href="http://s40723135.github.io/cd2021">s40723135 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/s40723143/cd2021">s40723143 repo</a><span><span> </span>|<span> </span></span><a href="http://s40723143.github.io/cd2021">s40723143 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/s40723215/cd2021">s40723215 repo</a><span>|<span> </span></span><a href="http://s40723215.github.io/cd2021">s40723215 site</a><br/><span>----------</span><br/><a href="http://github.com/40823221/stage3-bg5">stage3-bg5 repo</a><span><span> </span>|<span> </span></span><a href="http://40823204.github.io/stage3-bg5">stage3-bg5 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823221/cd2021">40823221 repo</a><span><span> </span>|<span> </span></span><a href="http://40823221.github.io/cd2021">40823221 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823204/cd2021">40823204 repo</a><span><span> </span>|<span> </span></span><a href="http://40823204.github.io/cd2021">40823204 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823205/cd2021">40823205 repo</a><span><span> </span>|<span> </span></span><a href="http://40823205.github.io/cd2021">40823205 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823220/cd2021">40823220 repo</a><span><span> </span>|<span> </span></span><a href="http://40823220.github.io/cd2021">40823220 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823228/cd2021">40823228 repo</a><span><span> </span>|<span> </span></span><a href="http://40823228.github.io/cd2021">40823228 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823237/cd2021">40823237 repo</a><span><span> </span>|<span> </span></span><a href="http://40823237.github.io/cd2021">40823237 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823242/cd2021">40823242 repo</a><span><span> </span>|<span> </span></span><a href="http://40823242.github.io/cd2021">40823242 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823250/cd2021">40823250 repo</a><span>|<span> </span></span><a href="http://40823250.github.io/cd2021">40823250 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40832244/cd2021">40832244 repo</a><span>|<span> </span></span><a href="http://40832244.github.io/cd2021">40832244 site</a><br/><span>----------</span><br/><a href="http://github.com/40823225/stage3-bg6">stage3-bg6 repo</a><span><span> </span>|<span> </span></span><a href="http://40823214.github.io/stage3-bg6">stage3-bg6 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823225/cd2021">40823225 repo</a><span><span> </span>|<span> </span></span><a href="http://40823225.github.io/cd2021">40823225 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823214/cd2021">40823214 repo</a><span><span> </span>|<span> </span></span><a href="http://40823214.github.io/cd2021">40823214 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823218/cd2021">40823218 repo</a><span><span> </span>|<span> </span></span><a href="http://40823218.github.io/cd2021">40823218 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823211/cd2021">40823211 repo</a><span><span> </span>|<span> </span></span><a href="http://40823211.github.io/cd2021">40823211 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823248/cd2021">40823248 repo</a><span><span> </span>|<span> </span></span><a href="http://40823248.github.io/cd2021">40823248 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823247/cd2021">40823247 repo</a><span><span> </span>|<span> </span></span><a href="http://40823247.github.io/cd2021">40823247 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823216/cd2021">40823216 repo</a><span><span> </span>|<span> </span></span><a href="http://40823216.github.io/cd2021">40823216 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823238/cd2021">40823238 repo</a><span>|<span> </span></span><a href="http://40823238.github.io/cd2021">40823238 site</a><br/><span>----------</span><br/><a href="http://github.com/40623144/stage3-bg7">stage3-bg7 repo</a><span><span> </span>|<span> </span></span><a href="http://40823233.github.io/stage3-bg7">stage3-bg7 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40623144/cd2021">40623144 repo</a><span><span> </span>|<span> </span></span><a href="http://40623144.github.io/cd2021">40623144 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823233/cd2021">40823233 repo</a><span><span> </span>|<span> </span></span><a href="http://40823233.github.io/cd2021">40823233 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/s40723224/cd2021">s40723224 repo</a><span><span> </span>|<span> </span></span><a href="http://s40723224.github.io/cd2021">s40723224 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823241/cd2021">40823241 repo</a><span><span> </span>|<span> </span></span><a href="http://40823241.github.io/cd2021">40823241 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40423155/cd2021">40423155 repo</a><span><span> </span>|<span> </span></span><a href="http://40423155.github.io/cd2021">40423155 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/40823227/cd2021">40823227 repo</a><span><span> </span>|<span> </span></span><a href="http://40823227.github.io/cd2021">40823227 site</a><span><span> </span>|<span> </span></span><a href="http://github.com/s40723233/cd2021">s40723233 repo</a><span><span> </span>|<span> </span></span><a href="http://s40723233.github.io/cd2021">s40723233 site</a><br/><span>----------</span></p>
<h5>task 2</h5>
<p>請各組員分別將個人在 stage1 與 stage2 所完成的 coppeliasim 場景, 採 Python remote API 進行操控, 並將過程拍成影片後, 放在個人與分組網站上.</p>
<p>stage3 專案中的 CoppeliaSim 請一律使用<span> </span><a href="http://a.kmol.info:88/CoppeliaSimEdu_4.2.0.7z">4.2.0 版</a>.</p>
<p>範例:<span> </span><a href="http://mde.tw/cad2020/content/CoppeliaSim.html">http://mde.tw/cad2020/content/CoppeliaSim.html</a></p>
<h4>W10 範例:</h4>
<p>各班上課時所分配到的內部 IP, 192.168.192.1+組別+排序別</p>
<p>意即, 第五組排序別第一即為該組組長, 其 IP 為 192.168.192.151</p>
<p>以<span> </span><a href="http://mde.tw/cad2020/downloads/coppeliasim/vrep_remoteapi_ex.7z">http://mde.tw/cad2020/downloads/coppeliasim/vrep_remoteapi_ex.7z</a><span> </span>為例, 每一個 Python3 remote api 程式執行需要<span> </span><a href="https://raw.githubusercontent.com/CoppeliaRobotics/remoteApiBindings/master/python/python/sim.py">sim.py</a>,<span> </span><a href="https://raw.githubusercontent.com/CoppeliaRobotics/remoteApiBindings/master/python/python/simConst.py">simConst.py</a><span> </span>與<span> </span><a href="https://github.com/CoppeliaRobotics/remoteApiBindings/tree/master/lib/lib/Windows">remoteApi.dll</a><span> </span>等三個檔案, 若針對 2w1a.ttt 場景, 以下列 Python 程式對位於 192.168.192.1 伺服器上的 CoppeliaSim 場景進行操控:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_816560">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
<div class="line number89 index88 alt2">89</div>
<div class="line number90 index89 alt1">90</div>
<div class="line number91 index90 alt2">91</div>
<div class="line number92 index91 alt1">92</div>
<div class="line number93 index92 alt2">93</div>
<div class="line number94 index93 alt1">94</div>
<div class="line number95 index94 alt2">95</div>
<div class="line number96 index95 alt1">96</div>
<div class="line number97 index96 alt2">97</div>
<div class="line number98 index97 alt1">98</div>
<div class="line number99 index98 alt2">99</div>
<div class="line number100 index99 alt1">100</div>
<div class="line number101 index100 alt2">101</div>
<div class="line number102 index101 alt1">102</div>
<div class="line number103 index102 alt2">103</div>
<div class="line number104 index103 alt1">104</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">import</code> <code class="py plain">sim as vrep</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">import</code> <code class="py plain">math</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">import</code> <code class="py plain">random</code></div>
<div class="line number4 index3 alt1"><code class="py keyword">import</code> <code class="py plain">time</code></div>
<div class="line number5 index4 alt2"> </div>
<div class="line number6 index5 alt1"><code class="py functions">print</code> <code class="py plain">(</code><code class="py string">'Start'</code><code class="py plain">)</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="py comments"># Close eventual old connections</code></div>
<div class="line number9 index8 alt2"><code class="py plain">vrep.simxFinish(</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number10 index9 alt1"><code class="py comments"># Connect to V-REP remote server</code></div>
<div class="line number11 index10 alt2"><code class="py plain">clientID </code><code class="py keyword">=</code> <code class="py plain">vrep.simxStart(</code><code class="py string">'192.168.192.1'</code><code class="py plain">, </code><code class="py value">19997</code><code class="py plain">, </code><code class="py color1">True</code><code class="py plain">, </code><code class="py color1">True</code><code class="py plain">, </code><code class="py value">5000</code><code class="py plain">, </code><code class="py value">5</code><code class="py plain">)</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="py keyword">if</code> <code class="py plain">clientID !</code><code class="py keyword">=</code> <code class="py keyword">-</code><code class="py value">1</code><code class="py plain">:</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py functions">print</code> <code class="py plain">(</code><code class="py string">'Connected to remote API server'</code><code class="py plain">)</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py plain">res </code><code class="py keyword">=</code> <code class="py plain">vrep.simxAddStatusbarMessage(</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">        </code><code class="py plain">clientID, </code><code class="py string">"teacher"</code><code class="py plain">,</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">        </code><code class="py plain">vrep.simx_opmode_oneshot)</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">res </code><code class="py keyword">not</code> <code class="py keyword">in</code> <code class="py plain">(vrep.simx_return_ok, vrep.simx_return_novalue_flag):</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">        </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"Could not add a message to the status bar."</code><code class="py plain">)</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py comments"># Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">    </code><code class="py comments"># http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">    </code><code class="py plain">opmode </code><code class="py keyword">=</code> <code class="py plain">vrep.simx_opmode_oneshot_wait</code></div>
<div class="line number24 index23 alt1"> </div>
<div class="line number25 index24 alt2"><code class="py spaces">    </code><code class="py comments"># Try to retrieve motors and robot handlers</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">    </code><code class="py comments"># http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">    </code><code class="py plain">ret1, wristHandle </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetObjectHandle(clientID, </code><code class="py string">"WristMotor"</code><code class="py plain">, opmode)</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py plain">ret2, elbowHandle </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetObjectHandle(clientID, </code><code class="py string">"ElbowMotor"</code><code class="py plain">, opmode)</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">    </code><code class="py plain">ret3, shoulderHandle </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetObjectHandle(clientID, </code><code class="py string">"ShoulderMotor"</code><code class="py plain">, opmode)</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py plain">ret4, robotHandle </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetObjectHandle(clientID, </code><code class="py string">"2W1A"</code><code class="py plain">, opmode)</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py comments"># If handlers are OK, execute three random simulations</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">ret1 </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py value">0</code> <code class="py keyword">and</code> <code class="py plain">ret2 </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py value">0</code> <code class="py keyword">and</code> <code class="py plain">ret3 </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py value">0</code><code class="py plain">:</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">        </code><code class="py plain">random.seed()</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">        </code><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">3</code><code class="py plain">):</code></div>
<div class="line number36 index35 alt1"><code class="py spaces">            </code><code class="py comments"># Start the simulation</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">            </code><code class="py comments"># http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxStartSimulation</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">            </code><code class="py plain">vrep.simxStartSimulation(clientID, opmode)</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">            </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"----- Simulation started -----"</code><code class="py plain">)</code></div>
<div class="line number40 index39 alt1"> </div>
<div class="line number41 index40 alt2"><code class="py spaces">            </code><code class="py comments"># Start getting the robot position</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">            </code><code class="py comments"># Unlike other commands, we will use a streaming operating mode</code></div>
<div class="line number43 index42 alt2"><code class="py spaces">            </code><code class="py comments"># http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectPosition</code></div>
<div class="line number44 index43 alt1"><code class="py spaces">            </code><code class="py plain">pret, robotPos </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetObjectPosition(clientID, robotHandle, </code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">, vrep.simx_opmode_streaming)</code></div>
<div class="line number45 index44 alt2"><code class="py spaces">            </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"2w1a position: (x = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotPos[</code><code class="py value">0</code><code class="py plain">]) </code><code class="py keyword">+</code><code class="py plain">\</code></div>
<div class="line number46 index45 alt1"><code class="py spaces">                  </code><code class="py string">", y = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotPos[</code><code class="py value">1</code><code class="py plain">]) </code><code class="py keyword">+</code> <code class="py string">")"</code><code class="py plain">)</code></div>
<div class="line number47 index46 alt2"> </div>
<div class="line number48 index47 alt1"><code class="py spaces">            </code><code class="py comments"># Start getting the robot orientation</code></div>
<div class="line number49 index48 alt2"><code class="py spaces">            </code><code class="py comments"># Unlike other commands, we will use a streaming operating mode</code></div>
<div class="line number50 index49 alt1"><code class="py spaces">            </code><code class="py comments"># http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectOrientation</code></div>
<div class="line number51 index50 alt2"><code class="py spaces">            </code><code class="py plain">oret, robotOrient </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetObjectOrientation(clientID, robotHandle, </code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">, vrep.simx_opmode_streaming)</code></div>
<div class="line number52 index51 alt1"><code class="py spaces">            </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"2w1a orientation: (x = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotOrient[</code><code class="py value">0</code><code class="py plain">]) </code><code class="py keyword">+</code> <code class="py plain">\</code></div>
<div class="line number53 index52 alt2"><code class="py spaces">                  </code><code class="py string">", y = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotOrient[</code><code class="py value">1</code><code class="py plain">]) </code><code class="py keyword">+</code><code class="py plain">\</code></div>
<div class="line number54 index53 alt1"><code class="py spaces">                  </code><code class="py string">", z = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotOrient[</code><code class="py value">2</code><code class="py plain">]) </code><code class="py keyword">+</code> <code class="py string">")"</code><code class="py plain">)</code></div>
<div class="line number55 index54 alt2"> </div>
<div class="line number56 index55 alt1"><code class="py spaces">            </code><code class="py comments"># Make the robot move randomly five times</code></div>
<div class="line number57 index56 alt2"><code class="py spaces">            </code><code class="py keyword">for</code> <code class="py plain">j </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">5</code><code class="py plain">):</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">                </code><code class="py comments"># Generating random positions for the motors</code></div>
<div class="line number59 index58 alt2"><code class="py spaces">                </code><code class="py plain">awrist </code><code class="py keyword">=</code> <code class="py plain">random.randint(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">300</code><code class="py plain">)</code></div>
<div class="line number60 index59 alt1"><code class="py spaces">                </code><code class="py plain">aelbow </code><code class="py keyword">=</code> <code class="py plain">random.randint(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">300</code><code class="py plain">)</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">                </code><code class="py plain">ashoulder </code><code class="py keyword">=</code> <code class="py plain">random.randint(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">300</code><code class="py plain">)</code></div>
<div class="line number62 index61 alt1"> </div>
<div class="line number63 index62 alt2"><code class="py spaces">                </code><code class="py comments"># The control functions use Radians to determine the target position.</code></div>
<div class="line number64 index63 alt1"><code class="py spaces">                </code><code class="py comments"># Here, we use maths.radians to convert degrees into radians.</code></div>
<div class="line number65 index64 alt2"><code class="py spaces">                </code><code class="py comments"># http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxSetJointTargetPosition</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">                </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"Motors target positions: "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(ashoulder) </code><code class="py keyword">+</code> <code class="py string">" "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(aelbow) </code><code class="py keyword">+</code> <code class="py string">" "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(awrist))</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">                </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID, wristHandle, math.radians(awrist), opmode)</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">                </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID, elbowHandle, math.radians(aelbow), opmode)</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">                </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID, shoulderHandle, math.radians(ashoulder), opmode)</code></div>
<div class="line number70 index69 alt1"> </div>
<div class="line number71 index70 alt2"><code class="py spaces">                </code><code class="py comments"># Wait in order to let the motors finish their movements</code></div>
<div class="line number72 index71 alt1"><code class="py spaces">                </code><code class="py comments"># Tip: there must be a more efficient way to do it...</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">                </code><code class="py plain">time.sleep(</code><code class="py value">5</code><code class="py plain">)</code></div>
<div class="line number74 index73 alt1"> </div>
<div class="line number75 index74 alt2"><code class="py spaces">                </code><code class="py comments"># Get the motors effective positions after the movement sequence</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">                </code><code class="py comments"># http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetJointPosition</code></div>
<div class="line number77 index76 alt2"><code class="py spaces">                </code><code class="py plain">pwrist </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetJointPosition(clientID, wristHandle, opmode)</code></div>
<div class="line number78 index77 alt1"><code class="py spaces">                </code><code class="py plain">pelbow </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetJointPosition(clientID, elbowHandle, opmode)</code></div>
<div class="line number79 index78 alt2"><code class="py spaces">                </code><code class="py plain">pshoulder </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetJointPosition(clientID, shoulderHandle, opmode)</code></div>
<div class="line number80 index79 alt1"><code class="py spaces">                </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"Motors reached positions: "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(ashoulder) </code><code class="py keyword">+</code> <code class="py string">" "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(aelbow) </code><code class="py keyword">+</code> <code class="py string">" "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(awrist))</code></div>
<div class="line number81 index80 alt2"> </div>
<div class="line number82 index81 alt1"><code class="py spaces">                </code><code class="py comments"># Get the robot position after the movement sequence</code></div>
<div class="line number83 index82 alt2"><code class="py spaces">                </code><code class="py plain">pret, robotPos </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetObjectPosition(clientID, robotHandle, </code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">, vrep.simx_opmode_buffer)</code></div>
<div class="line number84 index83 alt1"><code class="py spaces">                </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"2w1a position: (x = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotPos[</code><code class="py value">0</code><code class="py plain">]) </code><code class="py keyword">+</code><code class="py plain">\</code></div>
<div class="line number85 index84 alt2"><code class="py spaces">                      </code><code class="py string">", y = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotPos[</code><code class="py value">1</code><code class="py plain">]) </code><code class="py keyword">+</code> <code class="py string">")"</code><code class="py plain">)</code></div>
<div class="line number86 index85 alt1"> </div>
<div class="line number87 index86 alt2"><code class="py spaces">                </code><code class="py comments"># Get the robot orientation after the movement sequence</code></div>
<div class="line number88 index87 alt1"><code class="py spaces">                </code><code class="py plain">oret, robotOrient </code><code class="py keyword">=</code> <code class="py plain">vrep.simxGetObjectOrientation(clientID, robotHandle, </code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">, vrep.simx_opmode_buffer)</code></div>
<div class="line number89 index88 alt2"><code class="py spaces">                </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"2w1a orientation: (x = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotOrient[</code><code class="py value">0</code><code class="py plain">]) </code><code class="py keyword">+</code><code class="py plain">\</code></div>
<div class="line number90 index89 alt1"><code class="py spaces">                      </code><code class="py string">", y = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotOrient[</code><code class="py value">1</code><code class="py plain">]) </code><code class="py keyword">+</code><code class="py plain">\</code></div>
<div class="line number91 index90 alt2"><code class="py spaces">                      </code><code class="py string">", z = "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(robotOrient[</code><code class="py value">2</code><code class="py plain">]) </code><code class="py keyword">+</code> <code class="py string">")"</code><code class="py plain">)</code></div>
<div class="line number92 index91 alt1"> </div>
<div class="line number93 index92 alt2"><code class="py spaces">            </code><code class="py comments"># End the simulation, wait to be sure V-REP had the time to stop it entirely</code></div>
<div class="line number94 index93 alt1"><code class="py spaces">            </code><code class="py comments"># http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxStopSimulation</code></div>
<div class="line number95 index94 alt2"><code class="py spaces">            </code><code class="py plain">vrep.simxStopSimulation(clientID, opmode)</code></div>
<div class="line number96 index95 alt1"><code class="py spaces">            </code><code class="py plain">time.sleep(</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number97 index96 alt2"><code class="py spaces">            </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"----- Simulation ended -----"</code><code class="py plain">)</code></div>
<div class="line number98 index97 alt1"> </div>
<div class="line number99 index98 alt2"><code class="py spaces">    </code><code class="py comments"># Close the connection to V-REP remote server</code></div>
<div class="line number100 index99 alt1"><code class="py spaces">    </code><code class="py comments"># http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxFinish</code></div>
<div class="line number101 index100 alt2"><code class="py spaces">    </code><code class="py plain">vrep.simxFinish(clientID)</code></div>
<div class="line number102 index101 alt1"><code class="py keyword">else</code><code class="py plain">:</code></div>
<div class="line number103 index102 alt2"><code class="py spaces">    </code><code class="py functions">print</code> <code class="py plain">(</code><code class="py string">'Failed connecting to remote API server'</code><code class="py plain">)</code></div>
<div class="line number104 index103 alt1"><code class="py functions">print</code> <code class="py plain">(</code><code class="py string">'End'</code><code class="py plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h4>CoppeliaSim 場景 remote API 協同監控流程:</h4>
<ol>
<li>各組員下載<span> </span><a href="https://portableapps.com/apps/music_video/obs-studio-portable">https://portableapps.com/apps/music_video/obs-studio-portable</a></li>
<li>擔任 CoppliaSim 場景直播者時, 必須以 @gm 帳號登入 Youtube 後, 啟動 Live stream 取得直播串流金鑰, 將金鑰輸入 OBS 後, 擷取電腦顯示器啟動串流, 然後利用 copy video url 取得直播網址.</li>
<li>將直播網誌公布在<span> </span><a href="https://gitter.im/mdecourse/cd2021">https://gitter.im/mdecourse/cd2021</a>, 並附上伺服器 IPv4 內部網路 IP 位址與場景開放埠號.</li>
<li>直播者同時必須在個人網站上公布 Python remote API 操控直播場景相關參變數以及監控條件.</li>
<li>待遠端各協同操控學員準備就緒後, 完成操控流程後將所錄製的影片嵌入個人與分組網站中.</li>
</ol>
<h5>task 3</h5>
<p>每週各組按照組員順序, 於每堂課程時段, 輪流由 2-3 名學員啟動 OBS + Youtube 直播 (每週每位學員均需輪流負責直播工作項目內容), 並在開播前將直播 URL 公布於課程 gitter, 以展示該時段該組針對 stage3 分組專題工作項目的協同過程. (即每週各組於上課時段均會有四段協同設計影片分別嵌入各負責直播錄影組員的網頁與分組網頁).</p>
<p>各直播錄影時段, 各直播組員 (2-3 名) 應先規劃進行中工作項目的網際簡報資料, 並依照簡報內容逐一介紹所要展示或討論的協同設計項目.</p>
<p>當其他組別在執行 stage3 分組專題內容碰到問題時, 應按照順序採取下列步驟解決問題:</p>
<ol>
<li>利用協同直播錄影時段, 輔以網際簡報資料, 明確說明所遭遇之問題情境.</li>
<li>上述影片上傳並嵌入個人網站與分組網站後, 根據問題描述影片內容, 尋求其他組在其分段直播時段說明如何解題.</li>
</ol>
<p>各組組員於進行 stage3 分組專題期間, 均應協同負責從<span>零組件設計繪圖</span>,<span> </span><span>零件轉檔</span>, 零組件轉入<span> </span><span>CoppeliaSim 進行設定</span>,<span> </span><span>Lua 監控</span>,<span> </span><span>Python 監控</span>,<span> </span><span>直播錄影</span>, ssh 維護<span>個人網際簡報</span>, ssh 維護<span>個人網站</span>, 並協同參與維護<span>分組網站</span>等工作項目, 若過程中遭遇問題, 則根據上述步驟進行解題.</p>
<p>直播前: 準備網際投影片</p>
<p>開啟直播: 將直播投影片(即直播主題) 與直播連結登錄在<span> </span><a href="https://gitter.im/mdecourse/cd2021">https://gitter.im/mdecourse/cd2021</a></p>
<p>直播結束後: 將影片嵌入個人與分組網頁後, 連結繳交至<span> </span><a href="https://github.com/mdecourse/cd2021/discussions/24">https://github.com/mdecourse/cd2021/discussions/24</a></p>
<h4>抽選各分組直播學員的程式:</h4>
<div>
<div class="syntaxhighlighter py" id="highlighter_214888">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># open file, default is read mode, since txt content no chinese char</code></div>
<div class="line number2 index1 alt1"><code class="py comments"># no encoding = "UTF-8" is needed</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">import</code> <code class="py plain">random</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="py comments"># number of group menber to draw</code></div>
<div class="line number6 index5 alt1"><code class="py plain">num </code><code class="py keyword">=</code> <code class="py value">2</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="py comments"># check if data is "" or not</code></div>
<div class="line number9 index8 alt2"><code class="py keyword">def</code> <code class="py plain">notVacant(data):</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">data </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py plain">"":</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">        </code><code class="py keyword">return</code> <code class="py color1">False</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">    </code><code class="py keyword">else</code><code class="py plain">:</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">        </code><code class="py keyword">return</code> <code class="py color1">True</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">        </code> </div>
<div class="line number15 index14 alt2"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"stage3_2b.txt"</code><code class="py plain">) as fh:</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py comments"># readlines will read into the whole line and put into list format</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py comments"># has \n at the end of each line</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py plain">data </code><code class="py keyword">=</code> <code class="py plain">fh.readlines()</code></div>
<div class="line number19 index18 alt2"><code class="py comments">#print(len(data))</code></div>
<div class="line number20 index19 alt1"><code class="py comments"># big group list</code></div>
<div class="line number21 index20 alt2"><code class="py plain">bgroup </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number22 index21 alt1"><code class="py comments"># count from the second group member</code></div>
<div class="line number23 index22 alt2"><code class="py plain">sgroup </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number24 index23 alt1"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py functions">len</code><code class="py plain">(data)):</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">    </code><code class="py plain">group </code><code class="py keyword">=</code> <code class="py plain">data[i].rstrip(</code><code class="py string">"\n"</code><code class="py plain">).split(</code><code class="py string">"\t"</code><code class="py plain">)</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">    </code><code class="py comments">#print(group)</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">    </code><code class="py comments"># use mem to count the total number of each group</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py plain">mem </code><code class="py keyword">=</code> <code class="py value">0</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">    </code><code class="py comments"># final group data</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py plain">fgroup </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">    </code><code class="py comments"># count from the second group member, eliminate the first element</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py plain">sgroup </code><code class="py keyword">=</code> <code class="py plain">group[</code><code class="py value">1</code><code class="py plain">:]</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">    </code><code class="py comments"># get only the odd index number</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">    </code><code class="py plain">igroup </code><code class="py keyword">=</code> <code class="py plain">[i </code><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py functions">len</code><code class="py plain">(sgroup)) </code><code class="py keyword">if</code> <code class="py plain">i </code><code class="py keyword">%</code> <code class="py value">2</code> <code class="py keyword">=</code><code class="py keyword">=</code> <code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">j </code><code class="py keyword">in</code> <code class="py plain">igroup:</code></div>
<div class="line number36 index35 alt1"><code class="py spaces">        </code><code class="py comments"># index starts from 0 which is j-1 when j=1</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py plain">notVacant(sgroup[j</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">]) </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py color1">True</code><code class="py plain">:</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">            </code><code class="py plain">mem </code><code class="py keyword">+</code><code class="py keyword">=</code> <code class="py value">1</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">            </code><code class="py plain">fgroup.append(sgroup[j</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">])</code></div>
<div class="line number40 index39 alt1"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"group "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(i</code><code class="py keyword">+</code><code class="py value">1</code><code class="py plain">) </code><code class="py keyword">+</code> <code class="py string">":"</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(mem))</code></div>
<div class="line number41 index40 alt2"><code class="py spaces">    </code><code class="py comments"># shuffle the fgroup list</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">    </code><code class="py plain">random.shuffle(fgroup)</code></div>
<div class="line number43 index42 alt2"><code class="py spaces">    </code><code class="py comments"># draw num of member from final group list: fgroup</code></div>
<div class="line number44 index43 alt1"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">k </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(num):</code></div>
<div class="line number45 index44 alt2"><code class="py spaces">        </code><code class="py keyword">try</code><code class="py plain">:</code></div>
<div class="line number46 index45 alt1"><code class="py spaces">            </code><code class="py functions">print</code><code class="py plain">(fgroup[k])</code></div>
<div class="line number47 index46 alt2"><code class="py spaces">        </code><code class="py keyword">except</code><code class="py plain">:</code></div>
<div class="line number48 index47 alt1"><code class="py spaces">            </code><code class="py comments"># num is greater than total number of this group</code></div>
<div class="line number49 index48 alt2"><code class="py spaces">            </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"no such member"</code><code class="py plain">)</code></div>
<div class="line number50 index49 alt1"><code class="py spaces">    </code><code class="py comments"># seperator</code></div>
<div class="line number51 index50 alt2"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"-"</code><code class="py keyword">*</code><code class="py value">20</code><code class="py plain">)</code></div>
<div class="line number52 index51 alt1"><code class="py comments"># the following will use group data to generate needed html</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h4>人形 Robot 模擬套件比較:</h4>
<p><a href="http://mde.tw/cd2021/downloads/A%20Comparison%20of%20Humanoid%20Robot%20Simulators%20A%20Quantitative%20Approach.pdf">A Comparison of Humanoid Robot Simulators A Quantitative Approach.pdf</a></p>
<p>For robotic systems to be implemented in real-world scenarios, in several situations, it is preferred to develop and test them under controlled environments in order to reduce the risk of errors and unexpected behavior.  In this regard, a more accessible and efficient alternative is to implement  the environment using robotic simulation tools.</p>
<p>In general terms, our results show that Webots is the simulator with the lowest use ofresources, followed by V-REP, which has advantages over Gazebo, mainly because of the CPU use.</p>
<p>Robot simulators allow evaluating the feasibility and efficiency of algorithms varying in type and complexity, in a more controlled environment with no disturbances avoiding the occurrence of accidents.</p>
<h3>W11~W14</h3>
<p>打開安裝檔，選擇繁體中文。</p>
<p><img alt="" height="154" src="/images/p1.png" width="288"/></p>
<p>按下"下一步"</p>
<p><img alt="" height="358" src="/images/p2.png" width="498"/></p>
<p>選擇安裝位置</p>
<p><img alt="" height="356" src="/images/p3.png" width="493"/></p>
<p>安裝中(約五分鐘)</p>
<p><img alt="" height="359" src="/images/p4.png" width="498"/></p>
<p>安裝完成</p>
<p><img alt="" height="354" src="/images/p5.png" width="497"/></p>
<p>下方功能列按下"+"號並選擇顯示器擷取</p>
<p><img alt="" height="758" src="/images/p6.png" width="1075"/></p>
<p><span>選擇擷取的顯示器</span></p>
<p><img alt="" height="608" src="/images/p7.png" width="719"/></p>
<p>打開設定-&gt;串流</p>
<p><img alt="" height="754" src="/images/p8.png" width="1116"/></p>
<p>在YouTube找到串流金鑰並輸入</p>
<p><img alt="" height="749" src="/images/p9.png" width="978"/></p>
<p>YouTube串流金鑰</p>
<p><img alt="" height="65" src="/images/p10.png" width="520"/></p>
<p>輸入並套用</p>
<p><img alt="" height="758" src="/images/p11.png" width="981"/></p>
<p>按下右下角"開始串流"開始直播</p>
<p><img alt="" height="754" src="/images/p12.png" width="1081"/></p>
<h3>W15</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/IKOGwoJ2HLk" width="560"></iframe></p>
<p>影片翻譯</p>
<p>我們在前面看到了這個簡單的雙連桿機器人關於正向運動學的講座。</p>
<p>描述了該機器人的工具提示位姿簡單地由兩個數字，坐標 x 和 y 相對於世界坐標系。</p>
<p>所以，這里的問題是，給定 x 和 y，我們要確定連接的角度 Q1和 Q2。</p>
<p>我們將遵循的解決方案在這個特定的部分是一個幾何</p>
<p>一。</p>
<p>我們將從一個簡單的作品開始的建設。</p>
<p>我們將覆蓋紅色三角形在我們的機器人之上。</p>
<p>我們知道終點坐標是x，y，所以三角形的垂直高度是 y，水平寬度是 x。並且，使用畢達哥拉斯定理，我們可以寫出r 平方等於 x 平方加上 y 平方。到目前為止，很容易。現在，我們要看看這個三角形此處以紅色突出顯示，我們想確定角度α。為了做到這一點，我們需要使用余弦規則。而且，如果你對余弦有點生疏<br/>規則，這里有一點覆習。我們有一個任意三角形。我們不必有任何直角它，我們將標記長度這條邊作為 A和相反的角度邊緣，我們將標記為小 a。而且，我們對這條邊和這條邊做同樣的事情角度，還有這條邊和這個角。所以，總而言之，雙方都被標記為首都A、B 和 C，角度標記為小a、小b和小c。</p>
<p>所以，余弦規則就是這種關系這里。這有點像畢達哥拉斯定理，除了<br/>對於這個額外的術語，最後的 cos一個在里面。</p>
<p>現在，讓我們將余弦規則應用於我們看了一會兒特定的三角形前。</p>
<p>寫下來很簡單這種特殊的關系。我們可以隔離術語 cos alpha，它給出<br/>我們感興趣的角度α在。</p>
<p>而且，它是根據常數定義的鏈接長度，A1 和 A2 以及位置末端執行器，x 和 y。</p>
<p>我們可以寫出這個簡單的關系角α和Q2。</p>
<p>而且，我們從余弦的形狀知道Q2 的 cos 必須等於負的函數cos 阿爾法。</p>
<p>這一次，我們只寫一個表達式對於連接角 Q2 的余弦。</p>
<p>現在，我們要再畫一個紅色三角形，我們將應用一些簡單的三角函數在這里。</p>
<p>如果我們知道 Q2，那麽我們就知道這個長度和這個紅色三角形的長度。</p>
<p>我們可以把這個關系寫成正弦的連接角 Q2。</p>
<p>現在，我們可以考慮這個更大的三角形其角為β，此邊長為三角形在這里以藍色給出。</p>
<p>並且，三角形另一邊的長度這是。</p>
<p>所以，現在我們可以寫一個表達式此處的這些參數的角度β。回到我們畫的紅色三角形<br/>之前，我們可以建立之間的關系</p>
<p>Q1 和角β。</p>
<p>介紹另一個角度，這個伽馬我們可以寫出之間的關系</p>
<p>角度伽馬和工具提示坐標 x和y。</p>
<p>現在，我們可以寫出一個簡單的關系我們構建的角度，伽馬和 beta 以及我們感興趣的連接角其中是 Q1。</p>
<p>而且，總的關系看起來有些東西像這樣。</p>
<p>相當覆雜的關系，它給了我們連接的角度，即 Q1</p>
<p>末端執行器坐標 y 和 x，以及一堆常量，a1 和 a2，它是</p>
<p>也是第二關節角度的函數，Q2。所以，讓我們總結一下我們有什麽派生於此。</p>
<p>我們有 Q2 的余弦表達式我們有 Q1 的表達式。</p>
<p>現在，余弦函數關於0.所以，如果我們知道余弦值Q2，那麽有兩種可能的解決方案，一個正角和一個負角。我們將明確選擇積極的角度，這意味著我可以寫出這個表達式這里。</p>
<p>現在，我們有了我們所說的逆這個雙連桿機器人的運動學解決方案。</p>
<p>我們有兩個連接角的表達式，Q1 和 Q2 在末端執行器姿勢方面</p>
<p>x 和 y，以及一堆常量。你注意到這兩個方程不是獨立的。</p>
<p>事實上，Q1 的方程取決於Q2 的解決方案。</p>
<p>在這種情況下，Q2 是負數，我們將用負數寫出 Q2 的解符號在反余弦前面。</p>
<p>現在，我們需要解決 Q1，所以我們要介紹這個特殊的紅色三角形，</p>
<p>我們之前求解的角度β，以及用術語定義的角度伽馬y 和 x。</p>
<p>現在，我們寫一個稍微不同的關系在 Q1、gamma 和 beta 之間，與什麽不同</p>
<p>我們以前有過。涉及到符號的變化。然後，我們可以替換之前的所有方程並提出這個表達式</p>
<p>對於 Q1。同樣，這里的符號发生了變化。</p>
<p>以前，這是一個負面信號。</p>
<p>而且，這里是總結形式的解決方案對於我們的雙連桿的逆運動學</p>
<p>當機器人處於這種特定配置時，其中 Q2 為負。</p>
<p>讓我們比較兩種解決方案，案例其中 Q2 為正，Q2 為正的情況是否定的</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/eIZuz1XCd0w" width="560"></iframe></p>
<p>這里我們有與我們相同的兩個鏈接機器人只是看著，但這次我們要使用分析方法解決它，即<br/>我們是否會更多地依賴代數，</p>
<p>特定的線性代數而不是幾何。我們有一個表達式 E，它是齊次的表示姿勢的變換<br/>機器人終結者，我們看了這個</p>
<p>在上一課中，我們可以編寫 endefector構成一個基本齊次序列轉換。 Q1 的旋轉，平移<br/>沿 X 方向 A1，旋轉Q2 然後在 X 方向上平移通過 A2。如果我展開這個，乘以所有一起轉換，我得到了表達顯示在這里；三乘三同構變換</p>
<p>表示機器人姿態的矩陣終結者。</p>
<p>現在對於這個特殊的兩連桿機器人，我們只對它的位置感興趣endefector，它是 X 和 Y 坐標，它們這兩個元素是同質的嗎</p>
<p>變換矩陣，所以我要覆制那些出來。所以這里又是我們的表達</p>
<p>對於 X 和 Y 我們要做的是一個相當常見的技巧，我們要平方並添加這兩個方程，我得到了一個關系看起來像這樣。現在我可以解決</p>
<p>根據 endefector 的關節角度 Q2姿勢 X 和 Y 以及機器人的常數 A1 和 A2。現在我要做的是應用總和<br/>的角度身份。我要擴展這些項，Q1 的正弦加 Q2 或 Q1 的余弦加<br/>Q2 為了讓生活更輕松一點，我打算建造一些變電站，所以無論在哪里<br/>我有 cos Q2，我要寫 C2 以及在哪里</p>
<p>曾經我有正弦 Q2，我要寫 S2。這是一個相當常見的速記，當人們正在研究機器人運動學方程。<br/>這是制作後的方程式替代品。看這兩個方程，我可以看到他們掉進了一個很好的井里已知形式，對於該形式有一個非常眾所周知的解決方案。所以我要考慮只是其中一個方程，方程為Y 並使用我們眾所周知的身份</p>
<p>解決方案，我可以確定變量小a、小b和小c一旦我確定了這些，我就可以只需寫下 Q1 的解決方案，即在這個特定的情況下相當於 theta案件。</p>
<p>這里再次是我們對 Q1 的表達式，覆制從上一張幻燈片結束，我們可能還記得從我們早期的工作中我們確定這種特殊的關系； X平方加Y 平方等於這個特定的覆數<br/>表達。所以我可以用和代替它</p>
<p>做一些簡化，我最終得到這個Q1 的表達式稍微簡單一些。和這是我得到的相同表達上一節中的幾何方法。</p>
<h3>W16</h3>
<p>onshape繪製</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/0-NdsOlG1PA" width="560"></iframe></p>
<h4>建立 CoppeliaSim 4.1.0 MTB robot 場景</h4>
<p><a href="https://drive.google.com/file/d/1wtDe918nRNeteHjFrQdC-pqFxWbL4T09/view?usp=sharing">https://drive.google.com/file/d/1wtDe918nRNeteHjFrQdC-pqFxWbL4T09/view?usp=sharing</a>檔案網址</p>
<h4>程式碼(lua)</h4>
<div>
<div class="syntaxhighlighter py" id="highlighter_151737">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
<div class="line number89 index88 alt2">89</div>
<div class="line number90 index89 alt1">90</div>
<div class="line number91 index90 alt2">91</div>
<div class="line number92 index91 alt1">92</div>
<div class="line number93 index92 alt2">93</div>
<div class="line number94 index93 alt1">94</div>
<div class="line number95 index94 alt2">95</div>
<div class="line number96 index95 alt1">96</div>
<div class="line number97 index96 alt2">97</div>
<div class="line number98 index97 alt1">98</div>
<div class="line number99 index98 alt2">99</div>
<div class="line number100 index99 alt1">100</div>
<div class="line number101 index100 alt2">101</div>
<div class="line number102 index101 alt1">102</div>
<div class="line number103 index102 alt2">103</div>
<div class="line number104 index103 alt1">104</div>
<div class="line number105 index104 alt2">105</div>
<div class="line number106 index105 alt1">106</div>
<div class="line number107 index106 alt2">107</div>
<div class="line number108 index107 alt1">108</div>
<div class="line number109 index108 alt2">109</div>
<div class="line number110 index109 alt1">110</div>
<div class="line number111 index110 alt2">111</div>
<div class="line number112 index111 alt1">112</div>
<div class="line number113 index112 alt2">113</div>
<div class="line number114 index113 alt1">114</div>
<div class="line number115 index114 alt2">115</div>
<div class="line number116 index115 alt1">116</div>
<div class="line number117 index116 alt2">117</div>
<div class="line number118 index117 alt1">118</div>
<div class="line number119 index118 alt2">119</div>
<div class="line number120 index119 alt1">120</div>
<div class="line number121 index120 alt2">121</div>
<div class="line number122 index121 alt1">122</div>
<div class="line number123 index122 alt2">123</div>
<div class="line number124 index123 alt1">124</div>
<div class="line number125 index124 alt2">125</div>
<div class="line number126 index125 alt1">126</div>
<div class="line number127 index126 alt2">127</div>
<div class="line number128 index127 alt1">128</div>
<div class="line number129 index128 alt2">129</div>
<div class="line number130 index129 alt1">130</div>
<div class="line number131 index130 alt2">131</div>
<div class="line number132 index131 alt1">132</div>
<div class="line number133 index132 alt2">133</div>
<div class="line number134 index133 alt1">134</div>
<div class="line number135 index134 alt2">135</div>
<div class="line number136 index135 alt1">136</div>
<div class="line number137 index136 alt2">137</div>
<div class="line number138 index137 alt1">138</div>
<div class="line number139 index138 alt2">139</div>
<div class="line number140 index139 alt1">140</div>
<div class="line number141 index140 alt2">141</div>
<div class="line number142 index141 alt1">142</div>
<div class="line number143 index142 alt2">143</div>
<div class="line number144 index143 alt1">144</div>
<div class="line number145 index144 alt2">145</div>
<div class="line number146 index145 alt1">146</div>
<div class="line number147 index146 alt2">147</div>
<div class="line number148 index147 alt1">148</div>
<div class="line number149 index148 alt2">149</div>
<div class="line number150 index149 alt1">150</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">function sysCall_init() </code></div>
<div class="line number2 index1 alt1"><code class="py spaces">    </code><code class="py plain">axis1</code><code class="py keyword">=</code><code class="py plain">sim.getObjectHandle(</code><code class="py string">'MTB_axis1'</code><code class="py plain">)</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py plain">axis2</code><code class="py keyword">=</code><code class="py plain">sim.getObjectHandle(</code><code class="py string">'MTB_axis2'</code><code class="py plain">)</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py plain">axis3</code><code class="py keyword">=</code><code class="py plain">sim.getObjectHandle(</code><code class="py string">'MTB_axis3'</code><code class="py plain">)</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py plain">axis4</code><code class="py keyword">=</code><code class="py plain">sim.getObjectHandle(</code><code class="py string">'MTB_axis4'</code><code class="py plain">)</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">    </code><code class="py plain">mtb3</code><code class="py keyword">=</code><code class="py plain">sim.getObjectHandle(</code><code class="py string">'MTB_link3Respondable'</code><code class="py plain">)</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py plain">BaseFrame</code><code class="py keyword">=</code><code class="py plain">sim.getObjectHandle(</code><code class="py string">"BaseFrame"</code><code class="py plain">)</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py plain">block </code><code class="py keyword">=</code><code class="py plain">sim.getObjectHandle(</code><code class="py string">"block"</code><code class="py plain">)</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">    </code><code class="py plain">rotation1 </code><code class="py keyword">=</code> <code class="py value">0</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py plain">rotation2 </code><code class="py keyword">=</code> <code class="py value">0</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">    </code><code class="py plain">distance3 </code><code class="py keyword">=</code> <code class="py value">0</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">    </code><code class="py plain">deg </code><code class="py keyword">=</code> <code class="py plain">math.pi</code><code class="py keyword">/</code><code class="py value">180</code></div>
<div class="line number13 index12 alt2"><code class="py plain">end</code></div>
<div class="line number14 index13 alt1"><code class="py plain">function sysCall_actuation() </code></div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">吸盤往下降時, 直接貼在方塊頂部的校正值, 單位 m</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">向下較正值為 </code><code class="py value">4.2</code> <code class="py plain">mm</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py plain">calibration </code><code class="py keyword">=</code> <code class="py value">0.0042</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py plain">message, auxiliaryData</code><code class="py keyword">=</code><code class="py plain">sim.getSimulatorMessage()</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">        </code><code class="py keyword">while</code> <code class="py plain">message ~</code><code class="py keyword">=</code> <code class="py keyword">-</code><code class="py value">1</code> <code class="py plain">do</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">            </code><code class="py plain">key</code><code class="py keyword">=</code><code class="py plain">auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">            </code><code class="py plain">sim.addStatusbarMessage(</code><code class="py string">'使用者按下 key:'</code><code class="py plain">..key)</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(message</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py plain">sim.message_keypress) then</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">97</code><code class="py plain">) then </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">r right turn </code><code class="py keyword">in</code> <code class="py plain">degree</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">                    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">if</code> <code class="py plain">key r pressed axis1 angle adds </code><code class="py value">5</code> <code class="py plain">degrees</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">                     </code><code class="py plain">rotation1 </code><code class="py keyword">=</code> <code class="py plain">rotation1 </code><code class="py keyword">+</code> <code class="py value">5</code><code class="py keyword">*</code><code class="py plain">deg</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">                     </code><code class="py plain">sim.setJointPosition(axis1, rotation1)</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">                </code><code class="py plain">end </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">if</code> <code class="py plain">r</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">115</code><code class="py plain">) then </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">l left turn </code><code class="py keyword">in</code> <code class="py plain">degree</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">                    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">if</code> <code class="py plain">key l pressed axis1 angle substract </code><code class="py value">5</code> <code class="py plain">degrees</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">                     </code><code class="py plain">rotation1 </code><code class="py keyword">=</code> <code class="py plain">rotation1 </code><code class="py keyword">-</code> <code class="py value">5</code><code class="py keyword">*</code><code class="py plain">deg</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">                     </code><code class="py plain">sim.setJointPosition(axis1, rotation1)</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">                </code><code class="py plain">end </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">if</code> <code class="py plain">l</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">122</code><code class="py plain">) then </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">r right turn </code><code class="py keyword">in</code> <code class="py plain">degree</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">                    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">if</code> <code class="py plain">key r pressed axis1 angle adds </code><code class="py value">5</code> <code class="py plain">degrees</code></div>
<div class="line number36 index35 alt1"><code class="py spaces">                     </code><code class="py plain">rotation2 </code><code class="py keyword">=</code> <code class="py plain">rotation2 </code><code class="py keyword">+</code> <code class="py value">5</code><code class="py keyword">*</code><code class="py plain">deg</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">                     </code><code class="py plain">sim.setJointPosition(axis2, rotation2)</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">                </code><code class="py plain">end </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">if</code> <code class="py plain">r</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">120</code><code class="py plain">) then </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">l left turn </code><code class="py keyword">in</code> <code class="py plain">degree</code></div>
<div class="line number40 index39 alt1"><code class="py spaces">                    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">if</code> <code class="py plain">key l pressed axis1 angle substract </code><code class="py value">5</code> <code class="py plain">degrees</code></div>
<div class="line number41 index40 alt2"><code class="py spaces">                     </code><code class="py plain">rotation2 </code><code class="py keyword">=</code> <code class="py plain">rotation2 </code><code class="py keyword">-</code> <code class="py value">5</code><code class="py keyword">*</code><code class="py plain">deg</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">                     </code><code class="py plain">sim.setJointPosition(axis2, rotation2)</code></div>
<div class="line number43 index42 alt2"><code class="py spaces">                </code><code class="py plain">end </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">if</code> <code class="py plain">l</code></div>
<div class="line number44 index43 alt1"> </div>
<div class="line number45 index44 alt2"><code class="py spaces">           </code><code class="py plain">end  </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">if</code></div>
<div class="line number46 index45 alt1"><code class="py spaces">    </code><code class="py plain">message, auxiliaryData</code><code class="py keyword">=</code><code class="py plain">sim.getSimulatorMessage()</code></div>
<div class="line number47 index46 alt2"><code class="py spaces">        </code><code class="py plain">end </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py keyword">while</code></div>
<div class="line number48 index47 alt1"><code class="py plain">end </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">function</code></div>
<div class="line number49 index48 alt2"><code class="py plain">function sysCall_sensing() </code></div>
<div class="line number50 index49 alt1"><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">[[</code></div>
<div class="line number51 index50 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Read Proximity sensor (</code><code class="py value">0</code><code class="py keyword">=</code> <code class="py plain">nothing detected, </code><code class="py value">1</code> <code class="py keyword">=</code> <code class="py functions">object</code> <code class="py plain">detected)</code></div>
<div class="line number52 index51 alt1"><code class="py spaces">    </code><code class="py plain">local res </code><code class="py keyword">=</code> <code class="py plain">sim.readProximitySensor(proximity)</code></div>
<div class="line number53 index52 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Check </code><code class="py keyword">if</code> <code class="py plain">possible to insert an new box</code></div>
<div class="line number54 index53 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">(sim.getSimulationTime()</code><code class="py keyword">-</code><code class="py plain">T_last_inserted &gt; T_insert) </code><code class="py keyword">and</code> <code class="py keyword">not</code> <code class="py plain">hasStopped then</code></div>
<div class="line number55 index54 alt2"><code class="py spaces">        </code><code class="py plain">insertBox()</code></div>
<div class="line number56 index55 alt1"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number57 index56 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">If proximity sensor detects an </code><code class="py functions">object</code><code class="py plain">, stop the belt, stop inserting objects</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">res </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py value">1</code> <code class="py keyword">and</code> <code class="py keyword">not</code> <code class="py plain">hasStopped then</code></div>
<div class="line number59 index58 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py plain">boolList[</code><code class="py value">1</code><code class="py plain">] then</code></div>
<div class="line number60 index59 alt1"><code class="py spaces">            </code><code class="py plain">sim.setScriptSimulationParameter(sim.handle_self,</code><code class="py string">"conveyorBeltVelocity"</code><code class="py plain">,</code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">            </code><code class="py plain">deltaTime </code><code class="py keyword">=</code> <code class="py plain">sim.getSimulationTime()</code><code class="py keyword">-</code><code class="py plain">T_last_inserted</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">            </code><code class="py plain">hasStopped </code><code class="py keyword">=</code> <code class="py plain">true</code></div>
<div class="line number63 index62 alt2"><code class="py spaces">        </code><code class="py keyword">else</code></div>
<div class="line number64 index63 alt1"><code class="py spaces">            </code><code class="py plain">local box </code><code class="py keyword">=</code> <code class="py plain">table.remove(boxList,</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number65 index64 alt2"><code class="py spaces">            </code><code class="py plain">local boxDummy </code><code class="py keyword">=</code> <code class="py plain">table.remove(boxDummyList,</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">            </code><code class="py plain">table.remove(boolList,</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">            </code><code class="py plain">sim.removeObject(box)</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">            </code><code class="py plain">sim.removeObject(boxDummy)</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">        </code><code class="py plain">end</code></div>
<div class="line number70 index69 alt1"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">If proximity sensor detects nothing </code><code class="py keyword">and</code> <code class="py plain">belt has stopped, start belt, </code><code class="py keyword">continue</code> <code class="py plain">inserting</code></div>
<div class="line number72 index71 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">res </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py value">0</code> <code class="py keyword">and</code> <code class="py plain">hasStopped then</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">        </code><code class="py plain">sim.setScriptSimulationParameter(sim.handle_self,</code><code class="py string">"conveyorBeltVelocity"</code><code class="py plain">,beltSpeed)</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">        </code><code class="py plain">hasStopped </code><code class="py keyword">=</code> <code class="py plain">false</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">        </code><code class="py plain">T_last_inserted </code><code class="py keyword">=</code> <code class="py plain">sim.getSimulationTime()</code><code class="py keyword">-</code><code class="py plain">deltaTime</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number77 index76 alt2"><code class="py spaces">    </code> </div>
<div class="line number78 index77 alt1"><code class="py plain">]]</code><code class="py keyword">-</code><code class="py keyword">-</code></div>
<div class="line number79 index78 alt2"><code class="py plain">end</code></div>
<div class="line number80 index79 alt1"><code class="py plain">function sysCall_cleanup() </code></div>
<div class="line number81 index80 alt2"><code class="py plain">end </code></div>
<div class="line number82 index81 alt1"><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Convert a lua table into a lua syntactically correct string</code></div>
<div class="line number83 index82 alt2"><code class="py plain">function table_to_string(tbl)</code></div>
<div class="line number84 index83 alt1"><code class="py spaces">    </code><code class="py plain">local result </code><code class="py keyword">=</code> <code class="py string">"{"</code></div>
<div class="line number85 index84 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">k, v </code><code class="py keyword">in</code> <code class="py plain">pairs(tbl) do</code></div>
<div class="line number86 index85 alt1"><code class="py spaces">        </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Check the key </code><code class="py functions">type</code> <code class="py plain">(ignore </code><code class="py functions">any</code> <code class="py plain">numerical keys </code><code class="py keyword">-</code> <code class="py plain">assume its an array)</code></div>
<div class="line number87 index86 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py functions">type</code><code class="py plain">(k) </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py string">"string"</code> <code class="py plain">then</code></div>
<div class="line number88 index87 alt1"><code class="py spaces">            </code><code class="py plain">result </code><code class="py keyword">=</code> <code class="py plain">result..</code><code class="py string">"[\""</code><code class="py plain">..k..</code><code class="py string">"\"]"</code><code class="py plain">..</code><code class="py string">"="</code></div>
<div class="line number89 index88 alt2"><code class="py spaces">        </code><code class="py plain">end</code></div>
<div class="line number90 index89 alt1"> </div>
<div class="line number91 index90 alt2"><code class="py spaces">        </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Check the value </code><code class="py functions">type</code></div>
<div class="line number92 index91 alt1"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py functions">type</code><code class="py plain">(v) </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py string">"table"</code> <code class="py plain">then</code></div>
<div class="line number93 index92 alt2"><code class="py spaces">            </code><code class="py plain">result </code><code class="py keyword">=</code> <code class="py plain">result..table_to_string(v)</code></div>
<div class="line number94 index93 alt1"><code class="py spaces">        </code><code class="py plain">elseif </code><code class="py functions">type</code><code class="py plain">(v) </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py string">"boolean"</code> <code class="py plain">then</code></div>
<div class="line number95 index94 alt2"><code class="py spaces">            </code><code class="py plain">result </code><code class="py keyword">=</code> <code class="py plain">result..tostring(v)</code></div>
<div class="line number96 index95 alt1"><code class="py spaces">        </code><code class="py keyword">else</code></div>
<div class="line number97 index96 alt2"><code class="py spaces">            </code><code class="py plain">v </code><code class="py keyword">=</code> <code class="py functions">round</code><code class="py plain">(v, </code><code class="py value">4</code><code class="py plain">)</code></div>
<div class="line number98 index97 alt1"><code class="py spaces">            </code><code class="py plain">result </code><code class="py keyword">=</code> <code class="py plain">result..</code><code class="py string">"\""</code><code class="py plain">..v..</code><code class="py string">"\""</code></div>
<div class="line number99 index98 alt2"><code class="py spaces">        </code><code class="py plain">end</code></div>
<div class="line number100 index99 alt1"><code class="py spaces">        </code><code class="py plain">result </code><code class="py keyword">=</code> <code class="py plain">result..</code><code class="py string">","</code></div>
<div class="line number101 index100 alt2"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number102 index101 alt1"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Remove leading commas </code><code class="py keyword">from</code> <code class="py plain">the result</code></div>
<div class="line number103 index102 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">result ~</code><code class="py keyword">=</code> <code class="py plain">"" then</code></div>
<div class="line number104 index103 alt1"><code class="py spaces">        </code><code class="py plain">result </code><code class="py keyword">=</code> <code class="py plain">result:sub(</code><code class="py value">1</code><code class="py plain">, result:</code><code class="py functions">len</code><code class="py plain">()</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number105 index104 alt2"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number106 index105 alt1"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">result..</code><code class="py string">"}"</code></div>
<div class="line number107 index106 alt2"><code class="py plain">end</code></div>
<div class="line number108 index107 alt1"><code class="py plain">function </code><code class="py functions">round</code><code class="py plain">(x, n)</code></div>
<div class="line number109 index108 alt2"><code class="py spaces">    </code><code class="py plain">n </code><code class="py keyword">=</code> <code class="py plain">math.</code><code class="py functions">pow</code><code class="py plain">(</code><code class="py value">10</code><code class="py plain">, n </code><code class="py keyword">or</code> <code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number110 index109 alt1"><code class="py spaces">    </code><code class="py plain">x </code><code class="py keyword">=</code> <code class="py plain">x </code><code class="py keyword">*</code> <code class="py plain">n</code></div>
<div class="line number111 index110 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">x &gt;</code><code class="py keyword">=</code> <code class="py value">0</code> <code class="py plain">then x </code><code class="py keyword">=</code> <code class="py plain">math.floor(x </code><code class="py keyword">+</code> <code class="py value">0.5</code><code class="py plain">) </code><code class="py keyword">else</code> <code class="py plain">x </code><code class="py keyword">=</code> <code class="py plain">math.ceil(x </code><code class="py keyword">-</code> <code class="py value">0.5</code><code class="py plain">) end</code></div>
<div class="line number112 index111 alt1"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">x </code><code class="py keyword">/</code> <code class="py plain">n</code></div>
<div class="line number113 index112 alt2"><code class="py plain">end</code></div>
<div class="line number114 index113 alt1"> </div>
<div class="line number115 index114 alt2"> </div>
<div class="line number116 index115 alt1"><code class="py plain">function insertBox()</code></div>
<div class="line number117 index116 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Generate random numbers</code></div>
<div class="line number118 index117 alt1"><code class="py spaces">    </code><code class="py plain">local rand1 </code><code class="py keyword">=</code> <code class="py plain">math.random()</code></div>
<div class="line number119 index118 alt2"><code class="py spaces">    </code><code class="py plain">local rand2 </code><code class="py keyword">=</code> <code class="py plain">math.random()</code></div>
<div class="line number120 index119 alt1"><code class="py spaces">    </code><code class="py plain">local rand3 </code><code class="py keyword">=</code> <code class="py plain">math.random()</code></div>
<div class="line number121 index120 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Generate random disturbances on position </code><code class="py keyword">and</code> <code class="py plain">orientation</code></div>
<div class="line number122 index121 alt1"><code class="py spaces">    </code><code class="py plain">local dx </code><code class="py keyword">=</code> <code class="py plain">(</code><code class="py value">2</code><code class="py keyword">*</code><code class="py plain">rand1</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">)</code><code class="py keyword">*</code><code class="py value">0.1</code></div>
<div class="line number123 index122 alt2"><code class="py spaces">    </code><code class="py plain">local dy </code><code class="py keyword">=</code> <code class="py plain">(</code><code class="py value">2</code><code class="py keyword">*</code><code class="py plain">rand2</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">)</code><code class="py keyword">*</code><code class="py value">0.1</code></div>
<div class="line number124 index123 alt1"><code class="py spaces">    </code><code class="py plain">local dphi </code><code class="py keyword">=</code> <code class="py plain">(</code><code class="py value">2</code><code class="py keyword">*</code><code class="py plain">rand3</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">)</code><code class="py keyword">*</code><code class="py value">0.5</code></div>
<div class="line number125 index124 alt2"><code class="py spaces">    </code><code class="py plain">local disturbedCoordinates </code><code class="py keyword">=</code> <code class="py plain">{</code><code class="py value">0</code><code class="py plain">,</code><code class="py value">0</code><code class="py plain">,</code><code class="py value">0</code><code class="py plain">}</code></div>
<div class="line number126 index125 alt1"><code class="py spaces">    </code><code class="py plain">disturbedCoordinates[</code><code class="py value">1</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py plain">insertCoordinate[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">+</code><code class="py plain">dx</code></div>
<div class="line number127 index126 alt2"><code class="py spaces">    </code><code class="py plain">disturbedCoordinates[</code><code class="py value">2</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py plain">insertCoordinate[</code><code class="py value">2</code><code class="py plain">]</code><code class="py keyword">+</code><code class="py plain">dy</code></div>
<div class="line number128 index127 alt1"><code class="py spaces">    </code><code class="py plain">disturbedCoordinates[</code><code class="py value">3</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py plain">insertCoordinate[</code><code class="py value">3</code><code class="py plain">]</code></div>
<div class="line number129 index128 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Copy </code><code class="py keyword">and</code> <code class="py plain">paste box </code><code class="py keyword">and</code> <code class="py plain">boxDummy</code></div>
<div class="line number130 index129 alt1"><code class="py spaces">    </code><code class="py plain">local insertedObjects </code><code class="py keyword">=</code> <code class="py plain">sim.copyPasteObjects({box,boxDummy},</code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number131 index130 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Update last inserted box time</code></div>
<div class="line number132 index131 alt1"><code class="py spaces">    </code><code class="py plain">T_last_inserted </code><code class="py keyword">=</code> <code class="py plain">sim.getSimulationTime()</code></div>
<div class="line number133 index132 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Move </code><code class="py keyword">and</code> <code class="py plain">rotate</code></div>
<div class="line number134 index133 alt1"><code class="py spaces">    </code><code class="py plain">sim.setObjectPosition(insertedObjects[</code><code class="py value">1</code><code class="py plain">],</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">,disturbedCoordinates)</code></div>
<div class="line number135 index134 alt2"><code class="py spaces">    </code><code class="py plain">sim.setObjectOrientation(insertedObjects[</code><code class="py value">1</code><code class="py plain">],</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">,{</code><code class="py value">0</code><code class="py plain">,</code><code class="py value">0</code><code class="py plain">,dphi})</code></div>
<div class="line number136 index135 alt1"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Store handles to boxes </code><code class="py keyword">and</code> <code class="py plain">dummies</code></div>
<div class="line number137 index136 alt2"><code class="py spaces">    </code><code class="py plain">table.insert(boxList,insertedObjects[</code><code class="py value">1</code><code class="py plain">])</code></div>
<div class="line number138 index137 alt1"><code class="py spaces">    </code><code class="py plain">table.insert(boxDummyList,insertedObjects[</code><code class="py value">2</code><code class="py plain">]) </code></div>
<div class="line number139 index138 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">Decide </code><code class="py keyword">if</code> <code class="py functions">object</code> <code class="py keyword">is</code> <code class="py plain">good </code><code class="py keyword">or</code> <code class="py plain">bad</code></div>
<div class="line number140 index139 alt1"><code class="py spaces">    </code><code class="py plain">local decision </code><code class="py keyword">=</code> <code class="py plain">math.random() </code></div>
<div class="line number141 index140 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">decision &lt;</code><code class="py keyword">=</code> <code class="py plain">goodPercentage then</code></div>
<div class="line number142 index141 alt1"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py functions">Object</code> <code class="py keyword">is</code> <code class="py plain">good, assign goodColor</code></div>
<div class="line number143 index142 alt2"><code class="py spaces">        </code><code class="py plain">sim.setShapeColor(insertedObjects[</code><code class="py value">1</code><code class="py plain">],nil,sim.colorcomponent_ambient_diffuse,goodColor)</code></div>
<div class="line number144 index143 alt1"><code class="py spaces">        </code><code class="py plain">table.insert(boolList,true)</code></div>
<div class="line number145 index144 alt2"><code class="py spaces">    </code><code class="py keyword">else</code></div>
<div class="line number146 index145 alt1"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py functions">Object</code> <code class="py keyword">is</code> <code class="py plain">bad, assign random color</code></div>
<div class="line number147 index146 alt2"><code class="py spaces">        </code><code class="py plain">sim.setShapeColor(insertedObjects[</code><code class="py value">1</code><code class="py plain">],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})</code></div>
<div class="line number148 index147 alt1"><code class="py spaces">        </code><code class="py plain">table.insert(boolList,false)</code></div>
<div class="line number149 index148 alt2"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number150 index149 alt1"><code class="py plain">end</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h4>手臂末端加入 components-gripper-suction pad 吸盤<span> </span></h4>
<h4>逆向運動學函式.</h4>
<h4>Python remote API 逆向運動學函式</h4>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>