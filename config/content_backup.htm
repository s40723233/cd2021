<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>WORKS</h1>
<h2>stage 1</h2>
<h3>W1</h3>
<p>打開GITHUB</p>
<p>進入reposipories</p>
<p>開新專案</p>
<p><img alt="" height="75" src="/images/螢幕擷取畫面 2021-03-18 191108.png" width="495"/></p>
<p>輸入自己的組別</p>
<p><img alt="" height="423" src="/images/螢幕擷取畫面 2021-03-18 191137.png" width="502"/></p>
<p></p>
<p></p>
<h3>W2~W3</h3>
<p>W2主題擺鐘棘輪</p>
<p><img alt="" height="296" src="/images/1.jpg" width="170"/></p>
<h6>動機:看到時鐘就想到光陰的流逝，藉由研究單擺鐘的運動原理來提醒我們珍惜時間的重要性。</h6>
<h6>組長:40723141 楊先豪</h6>
<h6>組員:40723233 陳謙諭</h6>
<h6>一開始打算著手研究單擺鐘內部構造的時候我們以為構造會非常複雜。</h6>
<p><img alt="" height="595" src="/images/3.jpg" width="595"/></p>
<h6>後來上網查詢了很多資料才發現，單擺鐘最重要的是諸多齒輪當中一個叫擒縱機構的部分。</h6>
<p><img alt="" height="360" src="/images/2.jpg" width="480"/></p>
<h6>它的運作原理是靠著鐘擺底下掛的重物來回擺盪，帶動擒爪左右轉動，當轉動到底時，擒爪會卡入擒輪的齒縫使其停滯，來達到秒針運作的效果。</h6>
<p><img alt="" height="349" src="/images/2.gif" width="231"/><img alt="" height="307" src="/images/1.gif" width="283"/></p>
<h6>擒縱器因為不同的設計者有多種類型，每一款單擺鐘的擒縱器形式都不一定相同。</h6>
<p><img alt="" height="443" src="/images/4.jpg" width="476"/></p>
<h6>上網查找之後我們找到的資料幾乎都是運作方式的講解圖，花了許多時間才找到有標示尺寸的零件圖，之後我們就開始進行繪製。</h6>
<p><img alt="" height="433" src="/images/螢幕擷取畫面 2021-03-19 141047.png" width="503"/></p>
<p>零件一</p>
<p><img alt="" height="356" src="/images/螢幕擷取畫面 2021-03-18 194802.png" width="328"/></p>
<p><span>零件二</span></p>
<p><span><img alt="" height="259" src="/images/螢幕擷取畫面 2021-03-18 194855.png" width="339"/></span></p>
<p><span>零件三</span></p>
<p><span><img alt="" height="359" src="/images/螢幕擷取畫面 2021-03-18 194918.png" width="362"/></span></p>
<p><span>組合圖</span></p>
<p></p>
<h3>W4</h3>
<p>零件組合</p>
<p><img alt="" height="647" src="/images/螢幕擷取畫面 2021-03-19 140937.png" width="458"/></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/YyDckWiGCNo" width="560"></iframe></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>